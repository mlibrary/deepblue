<%# Note: @presenter will be nil if this a new deposit  %>
<% if @presenter.present? %>
  <% show_edit_despositor_creator = Flipflop.strict_orcid? && @presenter&.depositor_orcid.present? %>
  <% show_edit_depositor_orcid = @presenter.depositor_orcid  %>
<% else %>
  <% show_edit_despositor_creator = Flipflop.strict_orcid? && current_user&.orcid.present? %>
  <% show_edit_depositor_orcid = current_user.orcid  %>
<% end %>
<% if show_edit_despositor_creator %>
  <%
    ::Deepblue::LoggingHelper.bold_debug [ ::Deepblue::LoggingHelper.here,
                                           ::Deepblue::LoggingHelper.called_from,
                                           "f.class.name=#{f.class.name}",
                                           "f.object.authoremail=#{f.object.authoremail}",
                                           "f.object.creator_orcid=#{f.object.creator_orcid}",
                                           "f.object.depositor_creator=#{f.object.depositor_creator}",
                                           "" ] if false
  %>
  <%= hidden_field_tag('depositor_creator_available', 'true') %>
  <%= hidden_field_tag('depositor_orcid', show_edit_depositor_orcid) %>
  <% if f.object.authoremail.blank? # i.e. is it new %>
    <% depositor_creator_input_html_is_checked = true %>
  <% elsif f.object.creator_orcid.blank? || [""] == f.object.creator_orcid %>
    <% depositor_creator_input_html_is_checked = false %>
  <% else %>
    <% depositor_creator_input_html_is_checked = true %>
  <% end %>
  <%= f.input :depositor_creator,
              as: :boolean,
              required: false,
              input_html: { checked: depositor_creator_input_html_is_checked },
              label: t('simple_form.labels.data_set.depositor_creator') %>
  <%#= f.input :depositor_creator, as: :boolean, required: false, label: t('simple_form.labels.data_set.depositor_creator')  %>
<% end %>
