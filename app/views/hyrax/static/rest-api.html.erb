<div class="documentation-div">
<% host_url = "http://#{Rails.configuration.hostname}" %>
<h2 id="rest-api">REST API</h2>
  <ul>
    <li><a href="#rest-api">REST API</a></li>
    <li><a href="#rest-api-detailed">REST API - Detailed</a></li>
    <li><a href="#rest-api-examples">REST API - Examples</a></li>
  </ul>

  <h3>Catalog</h3>

  <ul>
    <li><code>/data/catalog.json</code></li>
    <li><code>/data/catalog.json?page=<var>:page_number</var></code></li>
    <li><code>/data/catalog.json?f[<var>:facet_name</var>][]=<var>:search_criteria</var></code></li>
  </ul>

  <h3>Collections</h3>
  <ul>
    <li><code>/data/concern/collections/<var>:collection_id</var>.json</code></li>
  </ul>

  <h3>Data Sets</h3>
  <ul>
    <li><code>/data/concern/data_sets/<var>:data_set_id</var>.json</code></li>
  </ul>

  <h3>File sets</h3>
  <ul>
    <li><code>/data/concern/file_sets/<var>:file_set_id</var>.json</code></li>
  </ul>

<h2 id="rest-api-detailed">REST API -- Detailed</h2>

  <ul>
    <li><a href="#rest-api">REST API</a></li>
    <li><a href="#rest-api-detailed">REST API - Detailed</a>
    <ul>
      <li><a href="#rest-api-detailed-catalog">Catalog</a></li>
      <li><a href="#rest-api-detailed-collections">Collections</a></li>
      <li><a href="#rest-api-detailed-data-sets">Data Sets</a></li>
      <li><a href="#rest-api-detailed-file-sets">File Sets</a></li>
    </ul>
    </li>
    <li><a href="#rest-api-examples">REST API - Examples</a></li>
  </ul>


<h3 id="rest-api-detailed-catalog">Catalog</h3>

<table class="rest-api-table">
  <tr>
    <th colspan="4">Request</th>
    <th colspan="3">Response</th>
  </tr>
  <tr>
    <th>Verb</th>
    <th>Path*</th>
    <th>Params</th>
    <th>Action</th>
    <th>Status</th>
    <th>Body</th>
    <th>Comments</th>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/catalog.json</code></td>
    <td>None</td>
    <td>find</td>
    <td><code>:ok</code></td>
    <td>
<pre>
{
  :response =>
    {
      :docs =>
      [
        {
          :model => String / "Collection"
          :id => String
          :metadata =>
            {
              :creator => [ String, ... ]
              :description  => [ String, ... ]
              :subject_discipline => [ String, ... ]
              :title => [ String, ... ]
            }
        },
        {
          :model => String / "Collection"
          :id => String
          :metadata =>
            {
              :creator => [ String, ... ]
              :description  => [ String, ... ]
              :keyword  => [ String, ... ]
              :subject_discipline => [ String, ... ]
              :title => [ String, ... ]
            }
        }, ...
      ],
      :facets =>
        [
          {
            :name => String
            :items =>
              [
                {
                  :value => String
                  :hits => Integer
                }, ...
              ]
          }, ...
        ]
      :pages =>
        {
          :current_page => Integer
          :next_page => Integer
          :prev_page => Integer
          :total_pages => Integer
          :limit_value => Integer
          :offset_value => Integer
          :total_count => Integer
          :first_page? => Boolean
          :last_page? => Boolean
        }
    }
}
</pre>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td>
      <code>/data/catalog.json?page=:page_number</code>
    </td>
    <td>
<pre>
:page_number => Integer
</pre>
    </td>
    <td>find</td>
    <td><code>:ok</code></td>
    <td>Response structure same as: <code>/data/catalog.json</code>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td>
      <code>/data/catalog.json?f%5B:facet_name%5D%5B%5D=:search_criteria</code>
      <br/>Or<br/>
      <code>/data/catalog.json?f[:facet_name][]=:search_criteria</code>
    </td>
    <td>
<pre>
:facet_name => String
:search_criteria => String
</pre>
    </td>
    <td>find</td>
    <td><code>:ok</code></td>
    <td>Response structure same as: <code>/data/catalog.json</code>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
</table>

<h3 id="rest-api-detailed-collections">Collections</h3>
<table class="rest-api-table">
  <tr><th colspan="4">Request</th><th colspan="3">Response</th></tr>
  <tr>
    <th>Verb</th>
    <th>Path*</th>
    <th>Params</th>
    <th>Action</th>
    <th>Status</th>
    <th>Body</th>
    <th>Comments</th>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/concern/collections/:collection_id.json</code></td>
    <td>
<pre>
:collection_id => String
</pre>
    </td>
    <td>find</td>
    <td><code>:ok</code><br/><code>:not_found</code></td>
    <td><%# see app/model/collection.rb metadata_keys_json %>
<pre>
{
  :id => String,
  :collection_member_ids => [ String, ... ],
  :create_date => String,
  :description => [ String, ... ],
  :keyword => [ String, ... ],
  :modified_date => String,
  :subject => [ String, ... ],
  :title => [ String, ... ],
  :work_member_ids => [ String, ... ],
  :collection_members =>
    [
      {
        :id => String
        :title => [ String, ... ],
      }, ...
    ]
  :collection_works =>
    [
      {
        :id => String
        :title => [ String, ... ],
      }, ...
    ]
}
</pre>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
</table>

<h3 id="rest-api-detailed-data-sets">Data Sets</h3>
<table class="rest-api-table">
  <tr>
    <th colspan="4">Request</th>
    <th colspan="3">Response</th>
  </tr>
  <tr>
    <th>Verb</th>
    <th>Path*</th>
    <th>Params</th>
    <th>Action</th>
    <th>Status</th>
    <th>Body</th>
    <th>Comments</th>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/concern/data_sets/:data_set_id.json</code></td>
    <td>
<pre>
:data_set_id => String
</pre>
    </td>
    <td>find</td>
    <td><code>:ok</code><br/><code>:not_found</code></td>
    <td><%# see app/model/data_set.rb metadata_keys_json %>
<pre>
{
  :id => String,
  :admin_set_id => String,
  :authoremail => String,
  :creator => [ String, ... ],
  :curation_notes_user => [ String, ... ],
  :date_coverage => String,
  :date_created => [ String, ... ],
  :date_modified => String,
  :date_published => String,
  :date_updated => String,
  :depositor => String,
  :description => [ String, ... ],
  :doi => String,
  :file_set_ids => [ String, ... ],
  :fundedby => [ String, ... ],
  :fundedby_other => [ String, ... ],
  :grantnumber => [ String, ... ],
  :keyword => [ String, ... ],
  :language => [ String, ... ],
  :methodology => [ String, ... ],
  :referenced_by => [ String, ... ],
  :rights_license => String,
  :rights_license_other => String,
  :subject_discipline => [ String, ... ],
  :title => [ String, ... ],
  :tombstone => [ String, ... ],
  :total_file_count => Integer,
  :total_file_size => Long,
  :total_file_size_human_readable => String,
  :visibility => String,
  :file_set_ids => [ String, ... ],
  :file_sets =>
    [
      {
        :id => String,
        :title => [ String, ... ],
        :label => String,
        :creator => [ String, ... ],
        :date_uploaded => String,
        :date_modified => String,
        :depositor => String,
        :doi => String,
        :description => [ String, ... ],
        :curation_notes_user => [ String, ... ],
        :file_size => Integer,
        :file_size_human_readable => String,
        :checksum_algorithm => String,
        :checksum_value => String,
        :original_checksum => String,
        :mime_type => String,
        :virus_scan_service => [ String, ... ],
        :virus_scan_status => [ String, ... ],
        :virus_scan_status_date => [ String, ... ]
      }, ...
    ]
}
</pre>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/concern/data_sets/:data_set_id/zip_download.json</code></td>
    <td>
  <pre>
  :data_set_id => String
  </pre>
    </td>
    <td>download</td>
    <td>
      <code>:ok</code><br/>
      <code>:not_found</code><br/>
      <code>:unprocessible_entity (if too large to download)</code>
    </td>
    <td>
      File sets zip encoded.
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
</table>

<h3 id="rest-api-detailed-file-sets">File Sets</h3>
<table class="rest-api-table">
  <tr>
    <th colspan="4">Request</th>
    <th colspan="3">Response</th>
  </tr>
  <tr>
    <th>Verb</th>
    <th>Path*</th>
    <th>Params</th>
    <th>Action</th>
    <th>Status</th>
    <th>Body</th>
    <th>Comments</th>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/concern/file_sets/:file_set_id.json</code></td>
    <td>
<pre>
:file_set_id => String
</pre>
    </td>
    <td>find</td>
    <td><code>:ok</code><br/><code>:not_found</code></td>
    <td><%# see app/model/file_set.rb metadata_keys_json %>
<pre>
{
  :id => String,
  :title => [ String, ... ],
  :label => String,
  :creator => [ String, ... ],
  :date_uploaded => String,
  :date_modified => String,
  :depositor => String,
  :doi => String,
  :description => [ String, ... ],
  :curation_notes_user => [ String, ... ],
  :file_size => Integer,
  :file_size_human_readable => String,
  :checksum_algorithm => String,
  :checksum_value => String,
  :original_checksum => String,
  :mime_type => String,
  :virus_scan_service => [ String, ... ],
  :virus_scan_status => [ String, ... ],
  :virus_scan_status_date => [ String, ... ]
}
</pre>
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
  <tr>
    <td><code>GET</code></td>
    <td><code>/data/downloads/:file_set_id.json</code></td>
    <td>
  <pre>
  :file_set_id => String
  </pre>
    </td>
    <td>download</td>
    <td>
      <code>:ok</code><br/>
      <code>:not_found</code><br/>
      <code>:unprocessible_entity (if too large to download)</code>
    </td>
    <td>
      File.
    </td>
    <td>Found component<br/>or<br/>Record not found</td>
  </tr>
</table>

<h2 id="rest-api-examples">REST API -- Examples</h2>

  <% example_collection_id = "c1234567" %>
  <% example_data_set_id = "d1234567" %>
  <% example_file_set_id = "f1234567" %>
  <ul>
    <li><a href="#rest-api">REST API</a></li>
    <li><a href="#rest-api-detailed">REST API - Detailed</a></li>
    <li><a href="#rest-api-examples">REST API - Examples</a></li>
  </ul>
  <h3>Catalog</h3>

  <ul>
    <li><code>curl '<%=host_url%>/data/catalog.json'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/catalog.json"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
    <li><code>curl '<%=host_url%>/data/catalog.json?page=2'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/catalog.json?page=2"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
    <li><code>curl '<%=host_url%>/data/catalog.json?f[creator][]=fritx'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/catalog.json?f[creator][]=fritx"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
  </ul>

  <h3>Collections</h3>
  <ul>
    <li><code>curl '<%=host_url%>/data/concern/collections/<%=example_collection_id%>.json'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/concern/collections/<%=example_collection_id%>"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
  </ul>

  <h3>Data Sets</h3>
  <ul>
    <li><code>curl '<%=host_url%>/data/concern/data_sets/<%=example_data_set_id%>.json'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/concern/data_sets/<%=example_data_set_id%>"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
  </ul>

  <h3>File sets</h3>
  <ul>
    <li><code>curl '<%=host_url%>/data/concern/file_sets/<%=example_file_set_id%>.json'</code></li>
    <li>
<pre>
# ruby
uri = "<%=host_url%>/data/concern/file_sets/<%=example_file_set_id%>"
response = Net::HTTP.get_response(URI.parse(uri))
json = JSON.parse( response.body )
puts JSON.pretty_generate( json )
</pre>
    </li>
  </ul>

</div>
