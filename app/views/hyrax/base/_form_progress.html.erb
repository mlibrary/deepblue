<% view_form_progress_debug_verbose = false %>
<aside id="form-progress" class="form-progress panel panel-default">
  <div class="panel-heading">
    <h2 class="panel-title"><%= t("hyrax.works.progress.header") %></h2>
  </div>
  <div class="list-group">
    <div class="list-group-item">
      <fieldset>
        <legend class="legend-save-work"><%= t('.requirements') %></legend>
        <ul class="requirements">
          <li class="incomplete" id="required-metadata"><%= t('hyrax.base.required_descriptions_deepblue') %></li>
          <% if Hyrax.config.work_requires_files? %>
            <li class="incomplete" id="required-files"><%= t('.required_files') %></li>
          <% end %>
          <% if Flipflop.show_deposit_agreement? && Flipflop.active_deposit_agreement_acceptance? %>
            <li class="incomplete" id="required-agreement"><%= t('hyrax.base.required_agreement_deepblue') %></li>
          <% end %>
        </ul>
      </fieldset>
    </div>

    <div class="set-access-controls list-group-item">
      <%= render 'form_visibility_component', f: f %>
    </div>
    <% if Flipflop.proxy_deposit? && current_user.can_make_deposits_for.any? %>
        <div class="list-group-item">
          <%= f.input :on_behalf_of, collection: current_user.can_make_deposits_for.map(&:user_key), prompt:  t(".yourself") %>
        </div>
    <% end %>
  </div>
  <div class="panel-footer text-center">
    <% if ::Flipflop.show_deposit_agreement? %>
      <% if ::Flipflop.active_deposit_agreement_acceptance? %>
        <label>
          <%= check_box_tag 'agreement', 1, f.object.agreement_accepted, required: true %>
          <%= t('hyrax.active_consent_to_agreement') %><br />
          <%= link_to t('hyrax.pages.tabs.agreement_page'),
                      hyrax.agreement_path + "#terms_of_use",
                      target: '_blank' %>
        </label>
      <% else %>
        <%= t('hyrax.passive_consent_to_agreement') %><br />
        <%= link_to t('hyrax.pages.tabs.agreement_page'),
                    hyrax.agreement_path + "#terms_of_use",
                    target: '_blank' %>
      <% end %>
    <% end %>
    <br />
    <%# TODO: If we start using ActionCable, we could listen for object updates and
              alert the user that the object has changed by someone else %>
    <%= f.input Hyrax::Actors::OptimisticLockValidator.version_field, as: :hidden if f.object.persisted? %>

    <%# The admin set will tell you if the work is a draft %>
    <% if Rails.configuration.work_save_as_draft_enable %>
      <%
        ::Deepblue::LoggingHelper.bold_debug [ ::Deepblue::LoggingHelper.here,
                                               ::Deepblue::LoggingHelper.called_from,
                                               "f.object&.admin_set_id=#{f.object&.admin_set_id}",
                                               "Rails.configuration.default_admin_set_id=#{Rails.configuration.default_admin_set_id}",
                                               "::Deepblue::DraftAdminSetService.draft_admin_set_title=#{::Deepblue::DraftAdminSetService.draft_admin_set_title}",
                                               "::Deepblue::DraftAdminSetService.draft_admin_set_id=#{::Deepblue::DraftAdminSetService.draft_admin_set_id}",
                                               "" ] if view_form_progress_debug_verbose
      %>
      <% if f.object&.admin_set_id.eql? Rails.configuration.default_admin_set_id %>
        <%# creaing work for the first time %>
        <%= f.submit value: t('helpers.action.work.review'),
                     class: 'btn btn-primary',
                     onclick: "confirmation_needed = false;",
                     id: "with_files_submit",
                     name: "save_with_files" %>
        <%= f.submit value: t('helpers.action.work.draft'),
                     class: 'btn btn-primary',
                     onclick: "confirmation_needed = false;",
                     id: "save_as_draft", name: "save_as_draft" %>
      <% elsif ::Deepblue::DraftAdminSetService.draft_admin_set_id.eql? f.object&.admin_set_id %>
        <%# User must be updating draft %>
        <%= f.submit value: t('helpers.action.work.review'),
                     class: 'btn btn-primary',
                     onclick: "confirmation_needed = false;",
                     id: "with_files_submit",
                     name: "save_with_files" %>
        <%= f.submit value: t('helpers.action.work.draft'),
                     class: 'btn btn-primary',
                     onclick: "confirmation_needed = false;",
                     id: "save_as_draft",
                     name: "save_as_draft" %>
      <% else %>
        <%= f.submit class: 'btn btn-primary',
                     onclick: "confirmation_needed = false;",
                     id: "with_files_submit",
                     name: "save_with_files" %>
      <% end %>
    <% else %> <%# The updating a work that has been published already %>
      <%= f.submit class: 'btn btn-primary',
                   onclick: "confirmation_needed = false;",
                   id: "with_files_submit",
                   name: "save_with_files" %>
    <% end %>

    <%= link_to t('.cancel'), request.referrer, class: 'btn btn-default'%>
    <p><%= t('simple_form.actions.data_set.submit_help') %></p>
  </div>

  <%# Provide immediate feedback after the form is submitted while the subsequent page is loading %>
  <div class="panel-footer hidden">
    <div class="progress">
      <div class="progress-bar progress-bar-striped progress-bar-complete active">
        <span id="form-feedback" aria-live="assertive"><%= t(".saving_your_work") %></span>
      </div>
    </div>
  </div>
</aside>
