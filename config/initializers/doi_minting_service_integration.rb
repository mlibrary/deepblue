
require_relative '../../app/services/deepblue/datacite_registrar'

Deepblue::DoiMintingService.setup do |config|

  ## configure doi minting service

  config.doi_minting_service_debug_verbose          = false
  config.doi_minting_2021_service_debug_verbose     = false

  config.doi_behavior_debug_verbose                 = false
  config.doi_minting_job_debug_verbose              = false
  config.register_doi_job_debug_verbose             = false
  config.bolognese_hyrax_work_readers_debug_verbose = false
  config.bolognese_hyrax_work_writers_debug_verbose = false
  config.data_cite_registrar_debug_verbose          = false
  config.hyrax_identifier_dispatcher_debug_verbose  = false

  config.doi_minting_service_integration_hostnames = [ 'deepblue.local',
                                        'testing.deepblue.lib.umich.edu',
                                        'staging.deepblue.lib.umich.edu',
                                        'deepblue.lib.umich.edu' ].freeze

  config.doi_minting_service_integration_hostnames_prod = [ 'deepblue.lib.umich.edu',
                                             'testing.deepblue.lib.umich.edu' ].freeze
  config.doi_minting_service_integration_enabled = config.doi_minting_service_integration_hostnames.include?(
      DeepBlueDocs::Application.config.hostname )
  config.doi_mint_on_publication_event = config.doi_minting_service_integration_enabled && false

  config.doi_publisher_name      = "University of Michigan".freeze
  config.doi_resource_type       = "Dataset".freeze
  config.doi_resource_types      = [ "Dataset", "Fileset" ].freeze

  config.doi_minting_2021_service_enabled          = false
  config.doi_minting_service_email_user_on_success = false

  config.test_base_url           = "https://api.test.datacite.org/"
  config.test_mds_base_url       = "https://mds.test.datacite.org/"
  config.production_base_url     = "https://api.datacite.org/"
  config.production_mds_base_url = "https://mds.datacite.org/"


  # TODO
  # config.host     = ENV['EZID_HOST'] || Settings.ezid.host
  # config.port     = ENV['EZID_PORT'] || Settings.ezid.port
  # config.user     = ENV['EZID_USER'] || Settings.ezid.user
  # config.password = ENV['EZID_PASSWORD'] || Settings.ezid.password
  # config.timeout  = ENV['EZID_TIMEOUT'] || Settings.ezid.timeout
  # config.default_shoulder = ENV['EZID_DEFAULT_SHOULDER'] || Settings.ezid.shoulder

  # frozen_string_literal: true
  ## Set a default host for urls generated by the DOI registrars (if necessary)
  # Rails.application.routes.default_url_options[:host] = 'localhost:3000'

  ## Remote identifiers configuration
  # Add registrar implementations by uncommenting and adding to the hash below.
  # See app/services/hyrax/identifier/registrar.rb for the registrar interface
  Hyrax.config.identifier_registrars = { datacite: ::Deepblue::DataCiteRegistrar }

  ## For DataCite DOIs
  ::Deepblue::DataCiteRegistrar.mode = :ENV['DATACITE_MODE'] || Settings.datacite.mode # Possible options are [:production, :test]
  ::Deepblue::DataCiteRegistrar.mode = ::Deepblue::DataCiteRegistrar.mode.to_sym unless ::Deepblue::DataCiteRegistrar.mode.nil?
  ::Deepblue::DataCiteRegistrar.mode = :test if ::Deepblue::DataCiteRegistrar.mode.nil?
  ::Deepblue::DataCiteRegistrar.prefix = ENV['DATACITE_PREFIX'] || Settings.datacite.prefix
  ::Deepblue::DataCiteRegistrar.username = ENV['DATACITE_USERNAME'] || Settings.datacite.user
  ::Deepblue::DataCiteRegistrar.password = ENV['DATACITE_PASSWORD'] || Settings.datacite.password

end
